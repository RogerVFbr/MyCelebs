service: my-celebs

provider:
  name: aws
  runtime: python3.7
  versionFunctions: false
  tracing:
    lambda: true
  apiKeys:
    - dev:
      - dev-my-celebs2
#      - name: dev-my-celebs2
#        value: dkk6N0ICO31VkEW9w1LCrb5NltNSujEUa9S64HTr
  usagePlan:
    - dev:
        quota:
          limit: 500000
          offset: 1
          period: MONTH
        throttle:
          burstLimit: 2000
          rateLimit: 1000
  environment:
    BASE_NAME: ${self:service}-${self:provider.stage}
    BUCKET_NAME: ${self:provider.environment.BASE_NAME}
    TABLE_NAME: ${self:provider.environment.BASE_NAME}
  stage: prod
  region: us-east-1
  memorySize: 1024
  timeout: 20
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "rekognition:*"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "apigateway:*"
      Resource: "*"

functions:
  addPicture:
    handler: endpoint_add_picture/add_picture.add_picture
    layers:
      - arn:aws:lambda:${self:provider.region}:113088814899:layer:Klayers-python37-Pillow:8
    events:
      - http:
          path: add_picture
          method: POST
          private: true
          cors: true
          request:
            schema:
              application/json: ${file(endpoint_add_picture/validation_schema/add_picture_schema.json)}

resources:
  Resources:
    FrontBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.BUCKET_NAME}
        AccessControl: PublicRead
    BucketPolicy:
      Type: 'AWS::S3::BucketPolicy'
      Properties:
        PolicyDocument:
          Statement:
            - Sid: PublicReadForGetBucketObjects
              Effect: Allow
              Principal: '*'
              Action:
                - 's3:GetObject'
              Resource: arn:aws:s3:::${self:provider.environment.BUCKET_NAME}/*
        Bucket:
          Ref: FrontBucket
    picturesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: time
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: time
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5


